/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.BloodDonation;
import Model.InKindDonation;
import Model.StaticUser;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author pkm_pondoksalam
 */
public class InKindDonationGUI extends javax.swing.JFrame {

    /**
     * Creates new form InKindDonation
     */
    public InKindDonationGUI() {
        initComponents();
        getInstPKComboBox();
        getDelivPKComboBox();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InKindDonation = new javax.swing.JPanel();
        InKindDonationLabel = new javax.swing.JLabel();
        InfoDescriptionLabel1 = new javax.swing.JLabel();
        AccountInfo1 = new javax.swing.JLabel();
        ItemNameTF = new javax.swing.JTextField();
        ItemWeightTF = new javax.swing.JTextField();
        SubmitBtn1 = new javax.swing.JButton();
        BackBtn1 = new javax.swing.JButton();
        SlogLabel3 = new javax.swing.JLabel();
        ItemWeightLabel = new javax.swing.JLabel();
        ItemNameLabel = new javax.swing.JLabel();
        DeliveryLabel = new javax.swing.JLabel();
        DeliveryServiceCB = new javax.swing.JComboBox();
        InstComboBox = new javax.swing.JComboBox();
        DeliveryLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InKindDonation.setBackground(new java.awt.Color(0, 102, 102));
        InKindDonation.setForeground(new java.awt.Color(0, 51, 51));

        InKindDonationLabel.setFont(new java.awt.Font("Felix Titling", 0, 24)); // NOI18N
        InKindDonationLabel.setForeground(new java.awt.Color(240, 240, 240));
        InKindDonationLabel.setText("In-KIND DOnation");

        InfoDescriptionLabel1.setForeground(new java.awt.Color(240, 240, 240));
        InfoDescriptionLabel1.setText("Fill the account based on account used in Donation Process.");

        AccountInfo1.setFont(new java.awt.Font("Felix Titling", 0, 18)); // NOI18N
        AccountInfo1.setForeground(new java.awt.Color(240, 240, 240));
        AccountInfo1.setText("Account Information");

        SubmitBtn1.setFont(new java.awt.Font("Felix Titling", 0, 13)); // NOI18N
        SubmitBtn1.setText("Submit");
        SubmitBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SubmitBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtn1ActionPerformed(evt);
            }
        });

        BackBtn1.setFont(new java.awt.Font("Felix Titling", 0, 13)); // NOI18N
        BackBtn1.setText("Back");
        BackBtn1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtn1ActionPerformed(evt);
            }
        });

        SlogLabel3.setForeground(new java.awt.Color(240, 240, 240));
        SlogLabel3.setText("Transfer anytime, anywhere, everywhere.");

        ItemWeightLabel.setForeground(new java.awt.Color(240, 240, 240));
        ItemWeightLabel.setText("Item Weight");

        ItemNameLabel.setForeground(new java.awt.Color(240, 240, 240));
        ItemNameLabel.setText("Item Name");

        DeliveryLabel.setForeground(new java.awt.Color(240, 240, 240));
        DeliveryLabel.setText("Institution");

        DeliveryLabel1.setForeground(new java.awt.Color(240, 240, 240));
        DeliveryLabel1.setText("Delivery");

        javax.swing.GroupLayout InKindDonationLayout = new javax.swing.GroupLayout(InKindDonation);
        InKindDonation.setLayout(InKindDonationLayout);
        InKindDonationLayout.setHorizontalGroup(
            InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InKindDonationLayout.createSequentialGroup()
                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InKindDonationLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InfoDescriptionLabel1)
                            .addComponent(AccountInfo1)
                            .addGroup(InKindDonationLayout.createSequentialGroup()
                                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ItemWeightLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ItemNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(DeliveryLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DeliveryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(36, 36, 36)
                                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(InKindDonationLayout.createSequentialGroup()
                                        .addComponent(SubmitBtn1)
                                        .addGap(30, 30, 30)
                                        .addComponent(BackBtn1))
                                    .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ItemNameTF)
                                        .addComponent(ItemWeightTF, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(DeliveryServiceCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(InstComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 143, Short.MAX_VALUE))))))
                    .addGroup(InKindDonationLayout.createSequentialGroup()
                        .addGap(228, 228, 228)
                        .addComponent(InKindDonationLabel))
                    .addGroup(InKindDonationLayout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(127, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InKindDonationLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SlogLabel3)
                .addGap(215, 215, 215))
        );
        InKindDonationLayout.setVerticalGroup(
            InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InKindDonationLayout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addComponent(InKindDonationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SlogLabel3)
                .addGap(30, 30, 30)
                .addComponent(AccountInfo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InfoDescriptionLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ItemNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ItemWeightLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ItemWeightTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InstComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeliveryLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeliveryServiceCB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DeliveryLabel1))
                .addGap(18, 18, 18)
                .addGroup(InKindDonationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitBtn1)
                    .addComponent(BackBtn1))
                .addGap(63, 63, 63))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 681, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InKindDonation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 426, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InKindDonation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtn1ActionPerformed
        // TODO add your handling code here:
        try {  
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/do-nation","root","");
            PreparedStatement pst1 = conn.prepareStatement("SELECT * from inKindDonation;");
            ResultSet rs1 = pst1.executeQuery("SELECT COUNT(*) FROM inKindDonation;");
            // get the number of rows from the result set
            rs1.next();
            int rowCount = rs1.getInt(1)+201;
            
            PreparedStatement pst2 = conn.prepareStatement("SELECT * from InNeedInstitution");
            ResultSet rs2 = pst2.executeQuery();    
            String S = InstComboBox.getSelectedItem().toString();
            rs2 = pst2.executeQuery("SELECT InNeedPK FROM InNeedInstitution WHERE InstName ='"+S+"';");
            // get the number of rows from the result set
            rs2.next();
            int InstitutionFK = rs2.getInt(1);

            PreparedStatement pst3 = conn.prepareStatement("SELECT * from DeliveryServices");
            ResultSet rs3 = pst3.executeQuery();    
            String P = DeliveryServiceCB.getSelectedItem().toString();
            rs3 = pst3.executeQuery("SELECT InNeedPK FROM InNeedInstitution WHERE InstName ='"+P+"';");
            // get the number of rows from the result set
            rs3.next();
            int DeliveryFK = rs2.getInt(1);
            InKindDonation inkindDonation = new InKindDonation(rowCount,InstitutionFK,StaticUser.getDonorPK(),DeliveryFK,getItemNameTF(),getItemWeightTF(),2018,"");
              if (("".equals(getItemNameTF())) || ("".equals(getItemWeightTF()) ))
            {
                showMessage("Data can not be Empty!","Error", 0); 
            }else{
                PreparedStatement pst = conn.prepareStatement("INSERT INTO inkinddonation VALUES("+inkindDonation.getDonationPK()+
                                            ","+inkindDonation.getInNeedInstitutionFK()+","+inkindDonation.getDonorFK()+","+inkindDonation.getDeliveryFK()+",'"+
                                            getItemNameTF()+"',"+inkindDonation.getTotalWeight()+","+inkindDonation.getDonationDateTime()+",'"
                                            +inkindDonation.getDonationPurpose()+"');");
                int rs = pst.executeUpdate();
                if (rs > 0){
                     showMessage("Data Safely Added!","Success", 0);       
                }else{
                     showMessage("Data Not Added.","Error", 0);       
                }
              }
            conn.close();
            new GUIMainMenu().setVisible(true);
            this.dispose();
        } catch (Exception e) {  
            showMessage("Failed to Connect to Database","Error Connection", 0);        
            new GUIMainMenu().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_SubmitBtn1ActionPerformed

    private void BackBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtn1ActionPerformed
        // TODO add your handling code here:
                
        new GUIMainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackBtn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InKindDonationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InKindDonationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InKindDonationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InKindDonationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InKindDonationGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AccountInfo1;
    private javax.swing.JButton BackBtn1;
    private javax.swing.JLabel DeliveryLabel;
    private javax.swing.JLabel DeliveryLabel1;
    private javax.swing.JComboBox DeliveryServiceCB;
    private javax.swing.JPanel InKindDonation;
    private javax.swing.JLabel InKindDonationLabel;
    private javax.swing.JLabel InfoDescriptionLabel1;
    private javax.swing.JComboBox InstComboBox;
    private javax.swing.JLabel ItemNameLabel;
    private javax.swing.JTextField ItemNameTF;
    private javax.swing.JLabel ItemWeightLabel;
    private javax.swing.JTextField ItemWeightTF;
    private javax.swing.JLabel SlogLabel3;
    private javax.swing.JButton SubmitBtn1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
    public void showMessage(String message, String title, int type){
        JOptionPane.showMessageDialog(null, message, title, type);
    }
    
    public void addActionListener(ActionListener x){
        getSubmitBtn1().addActionListener(x);
        getBackBtn1().addActionListener(x);
        
        
    }

    /**
     * @return the BackBtn1
     */
    public JButton getBackBtn1() {
        return BackBtn1;
    }

    /**
     * @return the ItemNameTF
     */
    public String getItemNameTF() {
        return String.valueOf(ItemNameTF.getText());
    }

    public void setItemNameTF(String s) {
        this.ItemNameTF.setText(s);
    }

    public double getItemWeightTF() {
        return Double.valueOf(ItemWeightTF.getText());
    }

    public void setItemWeightTF(String s) {
        this.ItemWeightTF.setText(s);
    }

    public JButton getSubmitBtn1() {
        return SubmitBtn1;
    }

    public javax.swing.JComboBox getDeliveryServiceCB() {
        return DeliveryServiceCB;
    }

    public void getInstPKComboBox(){
        try {  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/do-nation","root","");  
            PreparedStatement pst = conn.prepareStatement("SELECT InstName from InNeedInstitution");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {  
                InstComboBox.addItem(rs.getString("InstName"));  
            }
            conn.close();
        } catch (Exception e) {  
            showMessage("Failed to Connect to Database Institution","Error Connection", 0);  
            
    }  
 }
    public void getDelivPKComboBox(){
        try {  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/do-nation","root","");  
            PreparedStatement pst = conn.prepareStatement("SELECT DeServiceNames from deliveryservices");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {  
                DeliveryServiceCB.addItem(rs.getString("DeServiceNames"));  
            }
            conn.close();
    } catch (Exception e) {  
        showMessage("Failed to Connect to Database delivery","Error Connection", 0);  
          
    }  
 }

}
