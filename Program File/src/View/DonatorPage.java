/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Donor;
import Model.StaticUser;
import Model.User;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author pkm_pondoksalam
 */
public class DonatorPage extends javax.swing.JFrame {

    /**
     * Creates new form DonatorPage
     */
    public DonatorPage() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DonatorPage = new javax.swing.JPanel();
        Login1Label = new javax.swing.JLabel();
        DonatorPageLabel = new javax.swing.JLabel();
        OrganizName = new javax.swing.JTextField();
        DonatorName = new javax.swing.JTextField();
        DonationAddress = new javax.swing.JTextField();
        UsernameReg = new javax.swing.JTextField();
        PasswordReg = new javax.swing.JTextField();
        AcceptTerms1 = new javax.swing.JCheckBox();
        RegisterButton = new javax.swing.JButton();
        PasswordSign = new javax.swing.JTextField();
        UsernameSign = new javax.swing.JTextField();
        SignInButton = new javax.swing.JButton();
        SlogLabel2 = new javax.swing.JLabel();
        RegisterLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DonatorPage.setBackground(new java.awt.Color(0, 102, 102));

        Login1Label.setFont(new java.awt.Font("Felix Titling", 0, 18)); // NOI18N
        Login1Label.setForeground(new java.awt.Color(240, 240, 240));
        Login1Label.setText("Log In");

        DonatorPageLabel.setFont(new java.awt.Font("Felix Titling", 0, 24)); // NOI18N
        DonatorPageLabel.setForeground(new java.awt.Color(240, 240, 240));
        DonatorPageLabel.setText("DONATOR PAGE");

        OrganizName.setText("Organization Name");

        DonatorName.setText("Donator Name");
        DonatorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DonatorNameActionPerformed(evt);
            }
        });

        DonationAddress.setText("Donation Address");
        DonationAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DonationAddressActionPerformed(evt);
            }
        });

        UsernameReg.setText("Username");
        UsernameReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameRegActionPerformed(evt);
            }
        });

        PasswordReg.setText("Password");
        PasswordReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordRegActionPerformed(evt);
            }
        });

        AcceptTerms1.setText("I accept terms and violation.");
        AcceptTerms1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AcceptTerms1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AcceptTerms1ActionPerformed(evt);
            }
        });

        RegisterButton.setText("Register");
        RegisterButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        PasswordSign.setText("Pass");

        UsernameSign.setText("Username");
        UsernameSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameSignActionPerformed(evt);
            }
        });

        SignInButton.setText("Sign In");
        SignInButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignInButtonActionPerformed(evt);
            }
        });

        SlogLabel2.setFont(new java.awt.Font("Adobe Garamond Pro", 0, 13)); // NOI18N
        SlogLabel2.setForeground(new java.awt.Color(240, 240, 240));
        SlogLabel2.setText("You're One Step Ahead");

        RegisterLabel1.setFont(new java.awt.Font("Felix Titling", 0, 18)); // NOI18N
        RegisterLabel1.setForeground(new java.awt.Color(240, 240, 240));
        RegisterLabel1.setText("Register");

        javax.swing.GroupLayout DonatorPageLayout = new javax.swing.GroupLayout(DonatorPage);
        DonatorPage.setLayout(DonatorPageLayout);
        DonatorPageLayout.setHorizontalGroup(
            DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DonatorPageLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Login1Label)
                    .addComponent(SlogLabel2)
                    .addComponent(SignInButton)
                    .addGroup(DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(PasswordSign, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(UsernameSign, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RegisterButton)
                    .addGroup(DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(RegisterLabel1)
                        .addComponent(DonatorName)
                        .addComponent(OrganizName)
                        .addComponent(DonationAddress)
                        .addComponent(UsernameReg)
                        .addComponent(PasswordReg)
                        .addComponent(AcceptTerms1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(52, 52, 52))
            .addGroup(DonatorPageLayout.createSequentialGroup()
                .addGroup(DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DonatorPageLayout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(DonatorPageLabel))
                    .addGroup(DonatorPageLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DonatorPageLayout.setVerticalGroup(
            DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DonatorPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DonatorPageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DonatorPageLayout.createSequentialGroup()
                        .addComponent(Login1Label)
                        .addGap(7, 7, 7)
                        .addComponent(SlogLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UsernameSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PasswordSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DonatorPageLayout.createSequentialGroup()
                        .addComponent(RegisterLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DonatorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OrganizName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DonationAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UsernameReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addGroup(DonatorPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SignInButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AcceptTerms1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegisterButton)
                .addGap(92, 92, 92))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 474, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(DonatorPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(DonatorPage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DonatorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DonatorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DonatorNameActionPerformed

    private void DonationAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DonationAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DonationAddressActionPerformed

    private void UsernameRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameRegActionPerformed

    private void PasswordRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordRegActionPerformed

    private void AcceptTerms1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AcceptTerms1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AcceptTerms1ActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
         try {  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/do-nation","root","");  
            
            PreparedStatement pst3 = conn.prepareStatement("SELECT * from Donor;");
            ResultSet rs3 = pst3.executeQuery();    
            rs3 = pst3.executeQuery("SELECT COUNT(*) FROM Donor;");
            // get the number of rows from the result set
             rs3.next();
            int rowCountDonor = rs3.getInt(1)+001;
            
            PreparedStatement pst4 = conn.prepareStatement("SELECT * from User1;");
            ResultSet rs4 = pst4.executeQuery();    
            rs4 = pst4.executeQuery("SELECT COUNT(*) FROM User1;");
            // get the number of rows from the result set
             rs4.next();
            
            int rowCountUser = rs4.getInt(1)+601;
            Donor donor = new Donor(rowCountDonor,rowCountUser,getDonatorName(),getOrganizName(),getDonationAddress());
            User user = new User(rowCountUser,getUsernameReg(), getPasswordReg());
            StaticUser.setDonorPK(rowCountDonor);
         
             if ("".equals(getUsernameReg()) || "".equals(getPasswordReg()) || "".equals(getOrganizName()) 
               ||  "".equals(getDonationAddress())||  "".equals(getDonatorName()))
             {
                                 showMessage("Data can not be Empty!","Error", 0); 
             }
                else{
                PreparedStatement pst1 = conn.prepareStatement("INSERT INTO Donor VALUES("+ donor.getDonorPK()+ "," + donor.getUserFK() +
                            ",'" + donor.getDonName() + "','" + donor.getOrgName() + "','"+ donor.getDonAddress() + "');");
            
                PreparedStatement pst2 = conn.prepareStatement("INSERT INTO User1 VALUES("+ user.getUserPK() + ",'" + user.getUsername() +"','"
                        + user.getPassword() +"');");
            
                int rs1 = pst1.executeUpdate();
                int rs2 = pst2.executeUpdate();

                if (rs1 > 0 && rs2 > 0){
                    JOptionPane.showMessageDialog(null, "Data saved","", 0);       
                }else{
                    JOptionPane.showMessageDialog(null, "Data fail to save","", 0);         
                }
            }
            conn.close();
            new GUIMainMenu().setVisible(true);
            this.dispose();
        } catch (Exception e) {  
            JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", 0);  
            this.dispose();
        }
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void SignInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignInButtonActionPerformed
           try {  
            Class.forName("com.mysql.jdbc.Driver");  
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/do-nation","root","");  
            User user = new User(101,UsernameSign.getText(), PasswordSign.getText());
            
            if ("".equals(getUsernameSign()) || "".equals(getPasswordSign()))
            {
                showMessage("Data can not be Empty!","Error", 0);
            }else{
                PreparedStatement pst1 = conn.prepareStatement("SELECT * from User1 WHERE Username ='"+user.getUsername()+"' AND Password='"+user.getPassword()+"';");
                ResultSet rs = pst1.executeQuery();
                if(rs.next()){
                    JOptionPane.showMessageDialog(null, "Username and Password Matched");
                    PreparedStatement pst2 = conn.prepareStatement("SELECT DonorPK From Donor D JOIN User1 U ON (D.UserFK = U.UserPK)"
                                            + "WHERE U.Username ='"+user.getUsername()+"' AND U.PASSWORD='"+user.getPassword()+"';");
                    ResultSet rs2 = pst2.executeQuery();
                    rs2.next();
                    int i = rs2.getInt(1);
                    StaticUser.setDonorPK(i);
                    new GUIMainMenu().setVisible(true);
                    this.dispose();
                }else{
                    JOptionPane.showMessageDialog(null, "Username and Password not Matched");
                }
            }
            conn.close();
        } catch (Exception e) {  
            JOptionPane.showMessageDialog(null,"Failed to Connect to Database","Error Connection", 0);  
        }
    }//GEN-LAST:event_SignInButtonActionPerformed

    private void UsernameSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameSignActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameSignActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DonatorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DonatorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DonatorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DonatorPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DonatorPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AcceptTerms1;
    private javax.swing.JTextField DonationAddress;
    private javax.swing.JTextField DonatorName;
    private javax.swing.JPanel DonatorPage;
    private javax.swing.JLabel DonatorPageLabel;
    private javax.swing.JLabel Login1Label;
    private javax.swing.JTextField OrganizName;
    private javax.swing.JTextField PasswordReg;
    private javax.swing.JTextField PasswordSign;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JLabel RegisterLabel1;
    private javax.swing.JButton SignInButton;
    private javax.swing.JLabel SlogLabel2;
    private javax.swing.JTextField UsernameReg;
    private javax.swing.JTextField UsernameSign;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
   public String getUsernameSign() {
        return UsernameSign.getText();
    }

    public String getPasswordSign() {
        return PasswordSign.getText();
    }

    public String getDonatorName() {
        return DonatorName.getText();
    }

    public String getOrganizName() {
        return OrganizName.getText();
    }

    public String getDonationAddress() {
        return DonationAddress.getText();
    }

    public String getUsernameReg() {
        return UsernameReg.getText();
    }

    public String getPasswordReg() {
        return PasswordReg.getText();
    }

    public void setUsernameSign(String Username) {
        this.UsernameSign.setText(Username);
    }

    public void setPasswordSign(String Password) {
        this.PasswordSign.setText(Password);
    }

    public void setDonatorName(String DonatorName) {
        this.DonatorName.setText(DonatorName);
    }

    public void setOrganizName(String OrganizName) {
        this.OrganizName.setText(OrganizName);
    }

    public void setDonationAddress(String DonationAddress) {
        this.DonationAddress.setText(DonationAddress);
    }

    public void setUsernameReg(String UsernameReg) {
        this.UsernameReg.setText(UsernameReg);
    }

    public void setPasswordReg(String PasswordReg) {
        this.PasswordReg.setText(PasswordReg);
    }
    
        public void showMessage(String message, String title, int type){
        JOptionPane.showMessageDialog(null, message, title, type);
    }
    
}
